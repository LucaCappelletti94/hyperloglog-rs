//! Optimal codes for the gap between subsequent hashes in the Listhash variant of HyperLogLog.
/// The optimal Rice code coefficients for the different precisions and bit sizes, when using byte padding for the hash.
pub(super) const OPTIMAL_VBYTE_RICE_COEFFICIENTS: [[&[u8]; 3]; 15] = [
    [&[], &[1u8], &[1u8]],
    [&[1u8], &[1u8], &[1u8]],
    [&[1u8], &[1u8], &[1u8]],
    [&[1u8], &[1u8], &[1u8]],
    [&[1u8, 5u8, 8u8, 9u8, 10u8], &[1u8, 8u8, 9u8, 10u8], &[1u8, 9u8, 10u8]],
    [&[1u8, 6u8, 8u8, 9u8, 10u8], &[1u8, 8u8, 9u8, 10u8], &[1u8, 9u8, 10u8]],
    [&[1u8, 6u8, 8u8, 9u8, 10u8], &[1u8, 8u8, 9u8, 10u8], &[1u8, 9u8, 10u8]],
    [&[1u8, 6u8, 8u8, 9u8, 10u8], &[1u8, 8u8, 9u8, 10u8], &[1u8, 9u8, 10u8]],
    [&[2u8, 6u8, 8u8, 9u8, 10u8], &[1u8, 8u8, 9u8, 10u8], &[1u8, 9u8, 10u8]],
    [&[2u8, 6u8, 8u8, 9u8, 10u8], &[1u8, 8u8, 9u8, 10u8], &[1u8, 9u8, 10u8]],
    [&[2u8, 6u8, 8u8, 9u8, 10u8], &[1u8, 8u8, 9u8, 10u8], &[1u8, 9u8, 10u8]],
    [
        &[2u8, 6u8, 8u8, 9u8, 10u8, 11u8, 12u8, 13u8, 13u8],
        &[1u8, 8u8, 9u8, 10u8, 11u8, 12u8, 12u8, 13u8],
        &[1u8, 9u8, 10u8, 11u8, 12u8, 12u8, 13u8],
    ],
    [
        &[2u8, 6u8, 8u8, 9u8, 10u8, 11u8, 12u8, 13u8, 13u8],
        &[1u8, 8u8, 9u8, 10u8, 11u8, 12u8, 12u8, 13u8],
        &[1u8, 9u8, 10u8, 11u8, 12u8, 12u8, 13u8],
    ],
    [
        &[2u8, 6u8, 8u8, 9u8, 10u8, 11u8, 12u8, 13u8, 13u8],
        &[1u8, 8u8, 9u8, 10u8, 11u8, 12u8, 12u8, 13u8],
        &[1u8, 9u8, 10u8, 11u8, 12u8, 12u8, 13u8],
    ],
    [
        &[2u8, 6u8, 8u8, 9u8, 10u8, 11u8, 12u8, 13u8, 13u8],
        &[1u8, 8u8, 9u8, 10u8, 11u8, 12u8, 12u8, 13u8],
        &[1u8, 9u8, 10u8, 11u8, 12u8, 12u8, 13u8],
    ],
];
/// The optimal Rice code coefficients for the different precisions and bit sizes, when using hash-packing.
pub(super) const OPTIMAL_RICE_COEFFICIENTS: [[&[u8]; 3]; 15] = [
    [&[0u8], &[0u8], &[0u8]],
    [&[0u8, 5u8], &[0u8], &[0u8]],
    [&[0u8, 6u8], &[0u8], &[0u8]],
    [&[0u8, 6u8], &[0u8], &[0u8]],
    [
        &[0u8, 6u8, 7u8, 8u8, 9u8, 10u8, 11u8],
        &[0u8, 7u8, 8u8, 9u8, 10u8, 11u8, 12u8],
        &[0u8, 7u8, 9u8, 10u8, 11u8, 12u8],
    ],
    [
        &[0u8, 6u8, 7u8, 8u8, 9u8, 10u8, 11u8],
        &[0u8, 7u8, 8u8, 9u8, 10u8, 11u8, 12u8],
        &[0u8, 7u8, 9u8, 10u8, 11u8, 12u8],
    ],
    [
        &[0u8, 6u8, 7u8, 8u8, 9u8, 10u8, 11u8, 13u8],
        &[0u8, 7u8, 8u8, 9u8, 10u8, 11u8, 12u8],
        &[0u8, 7u8, 9u8, 10u8, 11u8, 12u8],
    ],
    [
        &[0u8, 6u8, 7u8, 8u8, 9u8, 10u8, 11u8, 13u8],
        &[0u8, 7u8, 8u8, 9u8, 10u8, 11u8, 12u8],
        &[0u8, 7u8, 9u8, 10u8, 11u8, 12u8],
    ],
    [
        &[0u8, 6u8, 7u8, 8u8, 9u8, 10u8, 11u8, 13u8],
        &[0u8, 7u8, 8u8, 9u8, 10u8, 11u8, 12u8],
        &[0u8, 7u8, 9u8, 10u8, 11u8, 12u8],
    ],
    [
        &[0u8, 6u8, 7u8, 8u8, 9u8, 10u8, 11u8, 13u8],
        &[0u8, 7u8, 8u8, 9u8, 10u8, 11u8, 12u8],
        &[0u8, 7u8, 9u8, 10u8, 11u8, 12u8],
    ],
    [
        &[0u8, 6u8, 7u8, 8u8, 9u8, 10u8, 11u8],
        &[0u8, 7u8, 8u8, 9u8, 10u8, 11u8],
        &[0u8, 7u8, 9u8, 10u8, 11u8],
    ],
    [
        &[0u8, 6u8, 7u8, 8u8, 9u8, 10u8, 11u8, 13u8, 14u8, 15u8, 16u8, 17u8, 18u8],
        &[0u8, 7u8, 8u8, 9u8, 10u8, 11u8, 12u8, 13u8, 14u8, 15u8, 16u8, 18u8],
        &[0u8, 7u8, 9u8, 10u8, 11u8, 12u8, 13u8, 14u8, 15u8, 16u8, 17u8],
    ],
    [
        &[0u8, 6u8, 7u8, 8u8, 9u8, 10u8, 11u8, 13u8, 14u8, 15u8, 16u8, 17u8, 18u8],
        &[0u8, 7u8, 8u8, 9u8, 10u8, 11u8, 12u8, 13u8, 14u8, 15u8, 16u8, 18u8],
        &[0u8, 7u8, 9u8, 10u8, 11u8, 12u8, 13u8, 14u8, 15u8, 16u8, 17u8],
    ],
    [
        &[0u8, 6u8, 7u8, 8u8, 9u8, 10u8, 11u8, 13u8, 14u8, 15u8, 16u8, 17u8],
        &[0u8, 7u8, 8u8, 9u8, 10u8, 11u8, 12u8, 13u8, 14u8, 15u8, 16u8],
        &[0u8, 7u8, 9u8, 10u8, 11u8, 12u8, 13u8, 14u8, 15u8, 16u8],
    ],
    [
        &[0u8, 6u8, 7u8, 8u8, 9u8, 10u8, 11u8, 13u8, 14u8, 15u8, 16u8],
        &[0u8, 7u8, 8u8, 9u8, 10u8, 11u8, 12u8, 13u8, 14u8, 15u8],
        &[0u8, 7u8, 9u8, 10u8, 11u8, 12u8, 13u8, 14u8, 15u8],
    ],
];
