"""Python script to load and plot the reports generated by the measure_variant script.

The two reports, namely 'latest_report.csv' and 'reference_report.csv', contain a single
column with the relative error of respectively the latest and reference variants.

"""

from glob import glob
from tqdm.auto import tqdm
import pandas as pd
import matplotlib.pyplot as plt

def hyperloglog_error(p: int) -> float:
    """Returns the expected error of the HyperLogLog algorithm for a given precision."""
    return 1.04 / (p ** 0.5)

def plot_all():
    """Load the reports and plot the histograms, boxplots and relative error plots."""
    # Load the reports
    fig, axs = plt.subplots(2, 1, figsize=(10, 10), sharex=False, sharey=False)
    for path in tqdm(glob("*.csv.gz"), desc="Loading reports", unit="report", leave=False):
        model_name = path.split(".csv.gz")[0]

        reports = pd.read_csv(path)

        axs[0].plot(
            reports.cardinality,
            reports.relative_error,
            label=model_name
        )

        axs[1].plot(
            reports.cardinality,
            reports.memory_requirements,
            label=model_name
        )

    # We plot an horizontal line representing the expected error of the HyperLogLog algorithm.
    # axs[0].axhline(hyperloglog_error(4), color="red", label="Expected error")

    axs[0].set_title("Relative error")
    axs[1].set_title("Memory requirements")
    axs[0].set_xlabel("Cardinality")
    axs[1].set_xlabel("Cardinality")
    axs[0].set_ylabel("Relative error")
    axs[1].set_ylabel("Memory requirements (bytes)")
    axs[0].legend()
    axs[1].legend()

    fig.tight_layout()
    fig.savefig("comparison.png")


if __name__ == "__main__":
    plot_all()
