[workspace]
resolver = "2"
members = [".", "hyperloglog-derive", "optimal-gap-codes", "measure_variant", "statistical_comparisons", "statistical_comparisons/macro_test_utils", "test_utils", "hash_list_correction"]

[package]
name = "hyperloglog-rs"
version = "0.1.56"
edition = "2021"
authors = ["Luca Cappelletti <cappelletti.luca94@gmail.com>"]
description = "A Rust implementation of HyperLogLog trying to be parsimonious with memory."
homepage = "https://github.com/LucaCappelletti94/hyperloglog-rs"
repository = "https://github.com/LucaCappelletti94/hyperloglog-rs"
readme = "README.md"
license = "MIT"
keywords = ["hyperloglog", "probabilistic", "algorithm", "cardinality", "estimation",]
categories = [
    "no-std",
    "algorithms",
    "science"
]
exclude = [
    "fuzz/",
    "intersection_tests/",
    "union_test",
    "experiments",
    "intersection_benchmarks.tsv.gz"
]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
serde = { version = "1.0", default-features = false, features = ["derive"], optional = true }
paste = "1.0.15"
twox-hash = {version="1.6.3", default-features = false}
mem_dbg = {version = "0.2.4", optional = true}
hyperloglog-derive = { path = "hyperloglog-derive" }


[dev-dependencies]
serde_json = "1.0"
wyhash = "0.5.0"
ahash = "0.8.11"
color-backtrace = { version = "0.6" }
ctor = "0.2.8"
criterion = { version = "0.5", features = ["html_reports"] }

[features]
default = []
mem_dbg = [
    "dep:mem_dbg",
    "std",
]
std = ["alloc"]
mle = ["std"]
alloc = []

[package.metadata.clippy]
all-features = true

[profile.test]
overflow-checks = true   # Disable integer overflow checks.
debug = true            # Include debug info.
debug-assertions = true  # Enables debug assertions.
opt-level = 3

[profile.release]
overflow-checks = false   # Disable integer overflow checks.
debug = false            # Include debug info.
debug-assertions = false  # Enables debug assertions.
opt-level = 3

[[bench]]
name = "hash_list_insert"
harness = false
