[workspace]
resolver = "2"
members = [".", "evaluate_composite_hash", "hyperloglog-derive", "statistical_comparisons", "statistical_comparisons/macro_test_utils"]

[package]
name = "hyperloglog-rs"
version = "0.1.56"
edition = "2021"
authors = ["Luca Cappelletti <cappelletti.luca94@gmail.com>"]
description = "A Rust implementation of HyperLogLog trying to be parsimonious with memory."
homepage = "https://github.com/LucaCappelletti94/hyperloglog-rs"
repository = "https://github.com/LucaCappelletti94/hyperloglog-rs"
readme = "README.md"
license = "MIT"
keywords = ["hyperloglog", "probabilistic", "algorithm", "cardinality", "estimation",]
categories = [
    "no-std",
    "algorithms",
    "science"
]
exclude = [
    "fuzz/",
    "intersection_tests/",
    "union_test",
    "experiments",
    "intersection_benchmarks.tsv.gz"
]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
serde = { version = "1.0", default-features = false, features = ["derive"], optional = true }
paste = "1.0.15"
twox-hash = {version="1.6.3", default-features = false}
mem_dbg = {version = "0.2.4", optional = true}
hyperloglog-derive = { path = "hyperloglog-derive" }

[build-dependencies]
serde_json = "1.0"

[dev-dependencies]
serde_json = "1.0"
wyhash = "0.5.0"
ahash = "0.8.11"
criterion = { version = "0.5", features = ["html_reports"] }

[features]
default = ["low_precisions", "beta", "plusplus", "zero_count_correction", "precomputed_beta"]
beta = []
precomputed_beta = ["beta"]
plusplus = []
# Whether to use the STD's ln function or using a lookup table.
# Enabling this feature will make the library not compile in no_std environments.
std_ln = [
    "std",
]
# Whether to use the low-cardinality correction based on zero-counts or not.
zero_count_correction = []
# Whether to use local interpolation or kmeans in plus plus bias correction.
plusplus_kmeans = ["plusplus"]
# Whether to use integer or floating point biases and estimates.
integer_plusplus = ["plusplus"]
std = [
    "twox-hash/std",
]
mem_dbg = [
    "dep:mem_dbg",
    "std",
]
mle = ["std", "alloc"]
precision_4 = []
precision_5 = []
precision_6 = []
precision_7 = []
precision_8 = []
precision_9 = []
precision_10 = []
precision_11 = []
precision_12 = []
precision_13 = []
precision_14 = []
precision_15 = []
precision_16 = []
precision_17 = []
precision_18 = []
low_precisions = [
    "precision_4",
    "precision_5",
    "precision_6",
    "precision_7",
    "precision_8",
    "precision_9",
    "precision_10",
]
medium_precisions = [
    "precision_11",
    "precision_12",
    "precision_13",
    "precision_14",
    "precision_15",
    "precision_16",
]
high_precisions = [
    "precision_17",
    "precision_18",
]
all_precisions = [
    "low_precisions",
    "medium_precisions",
    "high_precisions",
]
alloc = []

[package.metadata.clippy]
all-features = true

[profile.test]
overflow-checks = true   # Disable integer overflow checks.
debug = false            # Include debug info.
debug-assertions = true  # Enables debug assertions.
opt-level = 3

[profile.release]
overflow-checks = false   # Disable integer overflow checks.
debug = false            # Include debug info.
debug-assertions = false  # Enables debug assertions.
opt-level = 3

[[bench]]
name = "unique_count_from_sorted_iterators"
harness = false

[[bench]]
name = "hybrid"
harness = false

[[bench]]
name = "array"
harness = false
